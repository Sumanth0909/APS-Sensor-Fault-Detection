There is a company which manufactures vehicles - and these vehicles are used over the entire world. 
The Mechanical Engineering Department has designed a new type of braking system - called "air braking" which uses some kind of "air pressure system".
Now suppose any vehicle is there - whose condition is not good - now we want to identify whether this "not good" condition is because of "air pressure system" (APS) or not.

It is a BINARY CLASSIFICATION problem statement in Machine Learning. 

Every vehicle contains many sensors. We have these sensors' readings (multiple sensors). These sensors are used in the "air pressure system".
Based on these readings, we have to tell whether the failure is because of "air pressure system" or not.


As a Data Scientist, it is not our problem to think of "how/from where" all these data are got- Or how and where will all these data be stored - this is the job of a Data Engineer actually.
As a Data Scientist, we are just told that "so and so data is present in so and so database ; please fetch from there and start your work (or it is directly given to us).

Using "Kafka", the data is collected and is dumped inside "MongoDB" (DataBase). We will have to fetch our data from MongoDB.

For now, ASSUME THAT WE HAVE ALREADY FETCHED/DOWNLOADED THE DATA FILE from MongoDB - "aps_failure_training_set1.csv" -- inside this, our target column or output column is "class" which has 2 values "pos" which means the failure is because of aps ; "neg" which means the failure is not because of aps -- then we will make some changes as we want and again upload it back to MongoDB - and then from here onwards, we can work on our data directly from MongoDB itself - no need for us to again and again download it into our local systems

Open the file -- "STEPS FOR PROJECT.txt"  --- and follow the steps

For EDA and Preprocessing (and understanding the data), Jupyter Notebook is better - so, we will use Jupyter Notebok to do only these and for the remaining things, we will use VS Code.
Next up ..... everything in VS Code itself!!
 